(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';
//
//var game = new Phaser.Game(800, 600, Phaser.AUTO, 'isaac-for-web-game');
//
//window.Utils = require('./utils');
//window.playerState = {
//    currentLevel: 'Game'
//}
//
//game.state.add('Boot', require('./states/boot'));
//game.state.add('Splash', require('./states/splash'));
//game.state.add('Preloader', require('./states/preloader'));
//game.state.add('Menu', require('./states/menu'));
//game.state.add('Game', require('./states/game'));
//
//game.state.start('Boot');

window.onload = function() {

    var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update});
    var player;
    var cursors;
    var enemy;
    var enemies;

    function preload () {

        game.load.image('logo', 'assets/sprite.png');
        game.load.image('player', 'assets/Player.png');
        game.load.image('enemy', 'assets/black_isaac.png');

    }

    function create () {

        console.log(game.world);

        //basic game settings
        game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;
        game.stage.backgroundColor = '#33cc33';

        //adding player
        player = game.add.sprite(game.world.centerX, game.world.centerY, 'player');
        player.anchor.setTo(0.5, 0.5);

        //creating enemies
        enemies = game.add.group();
        for (var i = 0; i< 20; i++) {
            enemies.create(Math.random() * 800, Math.random() * 600, 'enemy');
        }

        //creating game physics
        game.physics.startSystem(Phaser.Physics.P2JS);
        game.physics.p2.enable(player);
        game.physics.p2.enable(enemies);

        //go full screen on click
        game.input.onDown.add(gofull, this);

        cursors = game.input.keyboard.createCursorKeys();
    }

    function gofull() {

        if (game.scale.isFullScreen) {
            game.scale.startFullScreen(false);
        } else {
            game.scale.startFullScreen(false);
        }


    }

    function update () {

        if(cursors.left.isDown) {
            player.body.velocity.x += -5;
        }
        else if(cursors.right.isDown) {
            player.body.velocity.x += 5;
        }


        if(cursors.up.isDown) {
            player.body.velocity.y += -5;
        }
        else if (cursors.down.isDown) {
            player.body.velocity.y += 5;
        }
    }

    };

},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIndXNlIHN0cmljdCc7XG4vL1xuLy92YXIgZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZSg4MDAsIDYwMCwgUGhhc2VyLkFVVE8sICdpc2FhYy1mb3Itd2ViLWdhbWUnKTtcbi8vXG4vL3dpbmRvdy5VdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbi8vd2luZG93LnBsYXllclN0YXRlID0ge1xuLy8gICAgY3VycmVudExldmVsOiAnR2FtZSdcbi8vfVxuLy9cbi8vZ2FtZS5zdGF0ZS5hZGQoJ0Jvb3QnLCByZXF1aXJlKCcuL3N0YXRlcy9ib290JykpO1xuLy9nYW1lLnN0YXRlLmFkZCgnU3BsYXNoJywgcmVxdWlyZSgnLi9zdGF0ZXMvc3BsYXNoJykpO1xuLy9nYW1lLnN0YXRlLmFkZCgnUHJlbG9hZGVyJywgcmVxdWlyZSgnLi9zdGF0ZXMvcHJlbG9hZGVyJykpO1xuLy9nYW1lLnN0YXRlLmFkZCgnTWVudScsIHJlcXVpcmUoJy4vc3RhdGVzL21lbnUnKSk7XG4vL2dhbWUuc3RhdGUuYWRkKCdHYW1lJywgcmVxdWlyZSgnLi9zdGF0ZXMvZ2FtZScpKTtcbi8vXG4vL2dhbWUuc3RhdGUuc3RhcnQoJ0Jvb3QnKTtcblxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgdmFyIGdhbWUgPSBuZXcgUGhhc2VyLkdhbWUoODAwLCA2MDAsIFBoYXNlci5BVVRPLCAnJywgeyBwcmVsb2FkOiBwcmVsb2FkLCBjcmVhdGU6IGNyZWF0ZSwgdXBkYXRlOiB1cGRhdGV9KTtcbiAgICB2YXIgcGxheWVyO1xuICAgIHZhciBjdXJzb3JzO1xuICAgIHZhciBlbmVteTtcbiAgICB2YXIgZW5lbWllcztcblxuICAgIGZ1bmN0aW9uIHByZWxvYWQgKCkge1xuXG4gICAgICAgIGdhbWUubG9hZC5pbWFnZSgnbG9nbycsICdhc3NldHMvc3ByaXRlLnBuZycpO1xuICAgICAgICBnYW1lLmxvYWQuaW1hZ2UoJ3BsYXllcicsICdhc3NldHMvUGxheWVyLnBuZycpO1xuICAgICAgICBnYW1lLmxvYWQuaW1hZ2UoJ2VuZW15JywgJ2Fzc2V0cy9ibGFja19pc2FhYy5wbmcnKTtcblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZSAoKSB7XG5cbiAgICAgICAgY29uc29sZS5sb2coZ2FtZS53b3JsZCk7XG5cbiAgICAgICAgLy9iYXNpYyBnYW1lIHNldHRpbmdzXG4gICAgICAgIGdhbWUuc2NhbGUuZnVsbFNjcmVlblNjYWxlTW9kZSA9IFBoYXNlci5TY2FsZU1hbmFnZXIuU0hPV19BTEw7XG4gICAgICAgIGdhbWUuc3RhZ2UuYmFja2dyb3VuZENvbG9yID0gJyMzM2NjMzMnO1xuXG4gICAgICAgIC8vYWRkaW5nIHBsYXllclxuICAgICAgICBwbGF5ZXIgPSBnYW1lLmFkZC5zcHJpdGUoZ2FtZS53b3JsZC5jZW50ZXJYLCBnYW1lLndvcmxkLmNlbnRlclksICdwbGF5ZXInKTtcbiAgICAgICAgcGxheWVyLmFuY2hvci5zZXRUbygwLjUsIDAuNSk7XG5cbiAgICAgICAgLy9jcmVhdGluZyBlbmVtaWVzXG4gICAgICAgIGVuZW1pZXMgPSBnYW1lLmFkZC5ncm91cCgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaTwgMjA7IGkrKykge1xuICAgICAgICAgICAgZW5lbWllcy5jcmVhdGUoTWF0aC5yYW5kb20oKSAqIDgwMCwgTWF0aC5yYW5kb20oKSAqIDYwMCwgJ2VuZW15Jyk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2NyZWF0aW5nIGdhbWUgcGh5c2ljc1xuICAgICAgICBnYW1lLnBoeXNpY3Muc3RhcnRTeXN0ZW0oUGhhc2VyLlBoeXNpY3MuUDJKUyk7XG4gICAgICAgIGdhbWUucGh5c2ljcy5wMi5lbmFibGUocGxheWVyKTtcbiAgICAgICAgZ2FtZS5waHlzaWNzLnAyLmVuYWJsZShlbmVtaWVzKTtcblxuICAgICAgICAvL2dvIGZ1bGwgc2NyZWVuIG9uIGNsaWNrXG4gICAgICAgIGdhbWUuaW5wdXQub25Eb3duLmFkZChnb2Z1bGwsIHRoaXMpO1xuXG4gICAgICAgIGN1cnNvcnMgPSBnYW1lLmlucHV0LmtleWJvYXJkLmNyZWF0ZUN1cnNvcktleXMoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnb2Z1bGwoKSB7XG5cbiAgICAgICAgaWYgKGdhbWUuc2NhbGUuaXNGdWxsU2NyZWVuKSB7XG4gICAgICAgICAgICBnYW1lLnNjYWxlLnN0YXJ0RnVsbFNjcmVlbihmYWxzZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBnYW1lLnNjYWxlLnN0YXJ0RnVsbFNjcmVlbihmYWxzZSk7XG4gICAgICAgIH1cblxuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlICgpIHtcblxuICAgICAgICBpZihjdXJzb3JzLmxlZnQuaXNEb3duKSB7XG4gICAgICAgICAgICBwbGF5ZXIuYm9keS52ZWxvY2l0eS54ICs9IC01O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoY3Vyc29ycy5yaWdodC5pc0Rvd24pIHtcbiAgICAgICAgICAgIHBsYXllci5ib2R5LnZlbG9jaXR5LnggKz0gNTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgaWYoY3Vyc29ycy51cC5pc0Rvd24pIHtcbiAgICAgICAgICAgIHBsYXllci5ib2R5LnZlbG9jaXR5LnkgKz0gLTU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY3Vyc29ycy5kb3duLmlzRG93bikge1xuICAgICAgICAgICAgcGxheWVyLmJvZHkudmVsb2NpdHkueSArPSA1O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgfTtcbiJdfQ==
